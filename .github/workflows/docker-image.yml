name: docker-image

on:
  push:
    branches:
      - "main"
    tags:
      - "v*.*.*"
  pull_request:
    branches:
      - "main"
      - "develop"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Log in to the Container registry
        if: ${{ !env.ACT }}
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Checkout
        uses: actions/checkout@v2
      - name: Extract metadata for the Docker image
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
      - name: Set up Docker buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          push: ${{ env.ACT && 'false' || 'true' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max
  test:
    runs-on: ubuntu-latest
    needs: [ build ]
    strategy:
      matrix:
        blockchain: [ "ethereum" ]
        # Uncomment to enable testing on Elrond
#        blockchain: [ "ethereum", "elrond" ]
    env:
      BLOCKCHAIN: ${{ matrix.blockchain }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
  #      - name: Create .env file
  #        run: |
  #          touch .env
  #          {
  #            echo "PRIVATE_KEY=${{ secrets.PRIVATE_KEY }}"
  #            echo "RPC_URL=${{ secrets.RPC_URL }}"
  #            echo "WEB3_JWT=${{ secrets.WEB3_JWT }}"
  #            echo "W3_AGENT_KEY=${{ secrets.W3_AGENT_KEY }}"
  #            echo "PROOF_OUT_HEX=${{ secrets.PROOF_OUT_HEX }}"
  #            echo "W3_DELEGATION_FILE=${{ secrets.W3_DELEGATION_FILE }}"
  #          } >> .env
  #          cat .env
  #      - name: Run containers
  #        run: docker compose --env-file ".env" -f "docker-compose-ci.yml" up --build --remove-orphans --exit-code-from agent
  #      - name: Check running agent
  #        run: docker inspect bsp-agent
  #      - name: Check running containers
  #        run: docker ps
  #      - name: Delete .env & bin files
  #        run: |
  #          rm .env && rm -rf ./bin/block-ethereum
  #      - name: Stop containers
  #        if: always()
  #        run: docker compose -f "docker-compose-ci.yml" down
  release:
    runs-on: ubuntu-latest
    needs: [ build ]
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Create release
        uses: marvinpinto/action-automatic-releases@919008cf3f741b179569b7a6fb4d8860689ab7f0 # v1.2.1
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          draft: false
          prerelease: false